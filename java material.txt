java : 
 	 java is a prog lang.

	
feature :

	- secure 
	- portable	
		- jdk ( kit ) ; software development kit used to develop java applications 
			- jre ( run run time environment) ; it set up a environment to run the java programs 
			- jvm (virtual machine) : it is the responsble to execute the java program ( ide )  
				available in all online devices 
			- jit (Just in time ) - responsible to convert into binary format ( computer lang)
	-platform indipendent ( windows , macos ) 
	-object oriented 


java jdk :: latest versions are not stable.

jdk 8 
jdk 17
jdk 11

 java Structure : 

packages ; 
import statements ; 
class Class_Name {

		main(); //// Execution starts from main only 
	methods ();
	.
	
	.
	
	.
}
}

Data : information or value 
 
Data type : what type of data it is ?

			     Datatypes in java 
      
				'
		1) primitive Datatyps        2) Non primitive Datatypes 

1) Primitive Data types : 

byte 
short 
int 
long
float 
double 
char
Boolean
	
2) Non primintive Datatype 

Strings 
arrays 
stack 
map 
list 



Tokens : 
	 it is a smallest unit in a java programs 


Types of Tokens : 
 
1) identifiers: ( name given to a program ) // class name 

	- starts with alphabets (A)
	- can't start with numbers (1,2,3)
	- special symbols allowed ( $ and _(underscore))
	- space not allowed 


2) keywords : Keywords are pre- defined words( int, char, float ,.....)

	- can't used as identifiers 
	- 50 key words 


3) literals : literals are the values which are used in java programming language
	
	- Number Literals 
	- Character Literals 
 	- String Literals
	- Boolean Literals 


4) Operators : 
	
	- it is a symbol which are used to perform operation on data 
	 a + b


5) separators : It is used to separate the code.

	- {} [] () ; ,


6) comments : Additional information ( optional ) 

	- single line comment          //
	- multiple lines comments      /* ....statements........*/



java operators : 


Scanner : it is used to take the input from the console.


variable : 
	
	- it is used to store the value or information 


Rules to declare a variable : 
	
	- Must start with (A -Z , a-z , $ , _ )
	- can't start numbers                    exception :     int    Sony_age26 = 26;
	- Space is not allowed 


types of Variable ; 

	1) Local Variable
	2) Static Variable 
	3) Non - static Variable 





1) Local Variable ; 

	- it is declared within the method only 



add()
	{
	int a= 10 ;
	int b= 20 ;
	int add = a+b;
	print(add)

	}

	a= a+15 ; // Error



	- scope of the local variable is inside the method only 
	- we can't access the local variable outside the method 



2) Static Variable : 
	
	- when we are creating a static variable we must use keyword static .

	- it is declare within the class and outside the method.

	- whenever we are accessing static variable within the project we must import the class.


	- we can access those variables in 

		- inside the class
			- variable_name 

		- inside the package ( all classes in a package ) 

			- Class.variablename			




		- inside the project ( all packages ) 
			
			- make sure that the static variable is Public

			- import package and class 

			- Class. variable 



3) Non-Static Variable / instance  : 

	- these variables are declare within the class and outside the method without using static keyword.

	- These variables load when we create a object .
	
	- these variables can access anywhere by using object.


creation of object : 
	
	class name  object name = new class name();
	
	


Access: 
	- inside class
		
		- object .variable name

	- inside package (all classes) 
		
		-  object.variable name 

	- outside the project 
		
		- must import the class 
		

		- object.varialbe name 
		



	 


1) Arithmetic Operators (+ , -, *, / , %)
	- (a+b)
	- (a-b) 
	- (a*b) 
	- (a/b)
	- (a%b)











2) Relational Operators ( < , <=, >, >= , ==, !=) 
	
	- Relationship operators are used to check the relational between the oparands or variables 
	- it always  returns Boolean values ( True / False ) 
Ex: 
	a>b
	a<b
	a<=b
	a>=b
	a==b
	a!=b



3) Logical Operators ( &&, || , !) 


	-it is used btw the conditions 
	
	- it return true or false
	

 


4) Bitwise Operators ( & , | , !, <<, >> )  ( bits  --------> 0,1 ) 

	 - it is used to perform at bit level operation

	- Security purpose. 
	


5) Assignment Operators (=)

	
	- It is used to Assign a value to a variable.

	int  a = 10 ;   //  = is a assignment operator
		


6) unary Operators ( ++ , -- ) : 

	- it is performed on one variable only

1)Increment (++)    adds 1      ex :  a++    ======  a+1


	Two Type: 

	 1) pre- Increment : 
		   ++a;
		  adds one before using the variable 

	 2) post Increment : 
		    a++;
		   First use the value, then adds one 

2) Decrement (--)   remove 1 	  ex :  a--    ======  a-1

	Two types : 
	1) pre - Decrement : 
		--a; 
		removes one before using the variable 
	2) post - Decrement : 
		a--;
		first use the value and then removes one 


 


7) ternary operators (?, :): 

	- Ternary operator is used between three expressions .
	- first expression is always condition.
	Syntax ; 
		- (condition) ? statement 1 : statement 2;
	-if condition is true, then output will be first statement
	- if condition False, returns second Statement.

ex : 

int a = 10 ;
int b= 20 ;
big = (a>b) ? sout("A is Big"); : sout("B is big");

	








 
